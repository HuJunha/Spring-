IOC操作Bean管理（集合注入）

1.什么是注解
	（1）注解是代码特殊标记，格式：@注解名称（属性名称=属性值，属性名称=属性值）
	（2）使用注解，注解可以作用在类的上面，方法上面，属性上面
	（3）使用注解的目的简化xml配置


2.Spring针对Bean管理中创建对象提供注解
	（1）@Component
	（2）@Service
	（3）@Controller
	（4）@Repository
上面四个注解功能一样，都可以创建bean实例


3.基于注解方式实现对象创建
	第一步：引入依赖（aop依赖）
	第二步：开启组件扫描<context:component-scan base-package=" ">标签
		//1.如果扫描多个包，多个包使用逗号隔开
		//2.扫描包上层目录
	第三步：创建类，在类上面添加创建对象注解


4.开启组件扫描的配置
	use-default-filters=“false”表示现在不使用默认filter，自己配置filter
	context：include-filter，设置扫描的内容
	context：exclude-filter：设置哪些内容不进行扫描

例如：
	<context:component-scan base-package="Zhujie"		use-default-filters=“false”>
	<context:include-filter type="annotation"	expression="orgs.springframework.stereotype.Controller"/>
</context:component-scan>//表示只扫描为Controller类型的注解

	<context:component-scan base-package="Zhujie">
	<context:exinclude-filter type="annotation"	expression="orgs.springframework.stereotype.Controller"/>
</context:component-scan>//表示除了Controller类型的注解其他都扫描


5.基于注解方式对属性注入
	（1）@Autowired：根据属性类型进行自动装配
	
	
	（2）@Qualifer：根据属性名称进行注入
		这个@Qualifer注解的使用，要和上面@Autowired一起使用

	（3）@Resource：可以根据类型注入，可以根据名称注入
		
	（4）@value：注入普通类型属性

6.完全注解开发
	（1）创建配置类，替代xml配置文件
	（2）@Configuration//作为配置类，替代xml配置文件
		@ComponentScan(basePackages ={"相应的包"}
	（3）测试类右边变为 new AnnotationConfigApplicationContext